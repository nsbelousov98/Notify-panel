from flask import Flask, render_template, request, redirect
from telethon import TelegramClient
from dotenv import load_dotenv
import os
import asyncio

load_dotenv()

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'

# –î–∞–Ω–Ω—ã–µ –∏–∑ .env
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
session_name = os.getenv("SESSION", "session_name")
chat_id = int(os.getenv("CHAT_ID"))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telethon –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(session_name, api_id, api_hash)

# –°—Ç–∞—Ä—Ç—É–µ–º Telethon –æ—Ç–¥–µ–ª—å–Ω–æ
loop = asyncio.get_event_loop()
loop.run_until_complete(client.start())

@app.route("/", methods=["GET"])
def index():
    return render_template("index.html")

@app.route("/send", methods=["POST"])
def send():
    username = request.form.get("username")
    message = request.form.get("message")
    if username and message:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        loop.run_until_complete(client.send_message(username, message))
        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–µ–±—è –≤ –ª–∏—á–∫—É
        loop.run_until_complete(client.send_message(chat_id, f"üì© –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ @{username}: {message}"))
    return redirect("/")

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
